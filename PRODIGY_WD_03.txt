<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
            margin: 0;
            font-family: Arial, sans-serif;
        }

        h1 {
            margin-bottom: 10px;
        }

        #instructions {
            margin-bottom: 20px;
        }

        #game {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
            margin-bottom: 20px;
        }

        .cell {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100px;
            height: 100px;
            background-color: #ffffff;
            border: 2px solid #000000;
            font-size: 24px;
            cursor: pointer;
        }

        .cell.x {
            color: red;
        }

        .cell.o {
            color: blue;
        }

        button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Tic-Tac-Toe</h1>
    <div id="instructions">
        <p>How to Play:</p>
        <ul>
            <li>Players take turns clicking on a cell to place their marker (X or O).</li>
            <li>The first player to get three markers in a row (horizontally, vertically, or diagonally) wins.</li>
            <li>If all cells are filled and no player has three in a row, the game is a draw.</li>
            <li>Click the Restart button to start a new game.</li>
        </ul>
    </div>
    <div id="game">
        <div class="cell" data-index="0"></div>
        <div class="cell" data-index="1"></div>
        <div class="cell" data-index="2"></div>
        <div class="cell" data-index="3"></div>
        <div class="cell" data-index="4"></div>
        <div class="cell" data-index="5"></div>
        <div class="cell" data-index="6"></div>
        <div class="cell" data-index="7"></div>
        <div class="cell" data-index="8"></div>
    </div>
    <button id="restart">Restart</button>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const cells = document.querySelectorAll('.cell');
            const restartButton = document.getElementById('restart');
            let currentPlayer = 'x';
            let gameState = Array(9).fill(null);
            const winningCombinations = [
                [0, 1, 2],
                [3, 4, 5],
                [6, 7, 8],
                [0, 3, 6],
                [1, 4, 7],
                [2, 5, 8],
                [0, 4, 8],
                [2, 4, 6]
            ];

            function handleClick(event) {
                const cell = event.target;
                const index = cell.getAttribute('data-index');

                if (gameState[index] !== null || checkWinner()) {
                    return;
                }

                gameState[index] = currentPlayer;
                cell.textContent = currentPlayer.toUpperCase();
                cell.classList.add(currentPlayer);

                if (checkWinner()) {
                    setTimeout(() => {
                        alert(`${currentPlayer.toUpperCase()} wins!`);
                    }, 100);
                    return;
                }

                currentPlayer = currentPlayer === 'x' ? 'o' : 'x';
            }

            function checkWinner() {
                return winningCombinations.some(combination => {
                    return combination.every(index => gameState[index] === currentPlayer);
                });
            }

            function restartGame() {
                gameState.fill(null);
                cells.forEach(cell => {
                    cell.textContent = '';
                    cell.classList.remove('x', 'o');
                });
                currentPlayer = 'x';
            }

            cells.forEach(cell => cell.addEventListener('click', handleClick));
            restartButton.addEventListener('click', restartGame);
        });
    </script>
</body>
</html>
